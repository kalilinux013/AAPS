public String getlongestpalindromicsubstring(String s) {
    int start = 0, maxLength = 1;
    for (int i = 0; i < s.length(); i++) {
        int len1 = expandfromcenter(s, i, i);
        int len2 = expandfromcenter(s, i, i + 1);
        int len = Math.max(len1, len2);
        if (len > maxLength) {
            start = i - (len - 1) / 2;
            maxLength = len;
        }
    }
    return s.substring(start, start + maxLength);
}

private int expandfromcenter(String s, int left, int right) {
    while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
        left--;
        right++;
    }
    return right - left - 1;
}
// Time: O(n^2)
// Space: O(1)
